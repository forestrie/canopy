version: '3'

vars:
  CANOPY_DIR: './packages/apps/canopy'
  FOREST_PROJECT_ID: '{{.FOREST_PROJECT_ID}}'

tasks:
  all:
    desc: |
      Build all packages in the monorepo
      This includes the SvelteKit app and all shared packages
    cmds:
      - echo "🔨 Building all packages..."
      - pnpm run build
      - echo "✅ Build complete!"

  canopy:
    desc: |
      Build the Canopy SvelteKit application
      Builds for Cloudflare Workers deployment
    dir: '{{.CANOPY_DIR}}'
    cmds:
      - echo "🏗️  Building Canopy app for Cloudflare Workers..."
      - pnpm run build
      - echo "✅ Canopy build complete!"

  shared:
    desc: |
      Build shared packages
      Builds cbor-utils, scitt-types, and mmr-utils
    cmds:
      - echo "📦 Building shared packages..."
      - pnpm --filter "./packages/shared/*" run build
      - echo "✅ Shared packages built!"

  clean:
    desc: |
      Clean all build artifacts
      Removes dist, build, and .svelte-kit directories
    cmds:
      - echo "🧹 Cleaning build artifacts..."
      - rm -rf packages/apps/canopy/.svelte-kit
      - rm -rf packages/apps/canopy/build
      - rm -rf packages/shared/*/dist
      - rm -rf packages/shared/*/build
      - echo "✅ Clean complete!"

  watch:
    desc: |
      Build and watch for changes
      Runs build in watch mode for development
    cmds:
      - echo "👀 Starting build watch mode..."
      - pnpm run build --watch

  check:
    desc: |
      Type-check all TypeScript code
      Runs tsc to verify type correctness
    cmds:
      - echo "🔍 Type-checking TypeScript..."
      - pnpm -r run check
      - echo "✅ Type check complete!"

  lint:
    desc: |
      Lint all code
      Runs ESLint and Prettier checks
    cmds:
      - echo "🎨 Linting code..."
      - pnpm run lint
      - pnpm run check
      - echo "✅ Linting complete!"

  preview:
    desc: |
      Preview the production build locally
      Starts a local server with the production build
    dir: '{{.CANOPY_DIR}}'
    deps: [canopy]
    cmds:
      - echo "🚀 Starting preview server..."
      - pnpm run preview

  vercel:
    desc: |
      Build as Vercel would
      Simulates Vercel's build process locally
    env:
      VERCEL: '1'
      VERCEL_ENV: 'production'
      FOREST_PROJECT_ID: '{{.FOREST_PROJECT_ID}}'
    cmds:
      - echo "🔺 Building with Vercel configuration..."
      - echo "  FOREST_PROJECT_ID: {{.FOREST_PROJECT_ID}}"
      - cd {{.CANOPY_DIR}} && pnpm run build
      - echo "✅ Vercel build simulation complete!"